name: "Release pipeline"

concurrency:
  group: release
  cancel-in-progress: true

env:
  AWS_DEFAULT_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push:
    branches:
      - release/*

jobs:
  call-shared-workflow:
    uses: ams-community-github/talkize/.github/workflows/shared-workflow.yml@main
    secrets:
      GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  application-version:
    runs-on: ubuntu-latest
    needs: call-shared-workflow
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci
      - name: Set application version
        run: |
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          BRANCH_VERSION=$(printf '%s\n' ${GIT_BRANCH//release\//})
          TAG_VERSION=$(git tag --list | sort -V | tail -n1)
          export BRANCH_VERSION="${BRANCH_VERSION}" && TAG_VERSION="${TAG_VERSION}" && npm run version
          export PATCH_VERSION="$(cat .patch-version)"
          export APPLICATION_VERSION=${BRANCH_VERSION}.${PATCH_VERSION}
          echo "APPLICATION_VERSION=0.1.0" >> $GITHUB_ENV

  deploy-staging:
    needs: application-version
    runs-on: ubuntu-latest
    environment: staging
    env:
      APPLICATION_ENVIRONMENT: "staging"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci
      - name: Deploy on staging environment
        run: npm run deploy

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    env:
      APPLICATION_ENVIRONMENT: "production"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci
      - name: Push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          default_prerelease_bump: false
          custom_tag: "v0.1.0"
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Deploy on production environment
        run: npm run deploy
