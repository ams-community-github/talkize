name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*

jobs:
  scan-secret:
    name: gitleaks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci

      - name: Tests
        run: npm test
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "./**/junit.xml"
        if: always()

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci

      - name: Linter
        run: npm run lint

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci

      - name: Build
        run: npm run build

  generate-cnf:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci
      - name: Generate Cloudformation
        run: npm run generate:cfn
      - name: Archive cloud formation
        uses: actions/upload-artifact@v3
        with:
          name: cnf
          path: aws/cdk/cdk.out/*.template.json

  cnf-lint:
    needs: generate-cnf
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: pip install cfn-lint cfn-lint-serverless
      - name: Download Cloudformation
        uses: actions/download-artifact@v3
        with:
          name: cnf
          path: cnf
      - name: Lint Cloudformation
        run: cfn-lint
        continue-on-error: true

  cnf-nag:
    needs: generate-cnf
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download Cloudformation
        uses: actions/download-artifact@v3
        with:
          name: cnf
          path: cnf
      - name: Scan with cnf nag
        uses: stelligent/cfn_nag@master
        with:
          input_path: cnf
          extra_args: -o sarif
          output_path: cfn_nag.sarif
      - name: Upload to Github Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: cfn_nag.sarif

  cnf-guard:
    needs: generate-cnf
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download Cloudformation template
        uses: actions/download-artifact@v3
        with:
          name: cnf
          path: cnf
      - name: Install and scan using cloudformation guard
        run: |
          apt update && apt upgrade -y && apt install software-properties-common apt-transport-https curl -y
          curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/aws-cloudformation/cloudformation-guard/main/install-guard.sh | sh
          export PATH=${PATH}:~/.guard/bin
          cfn-guard validate -r ./aws/cdk/rules.talkize.guard -d ./cnf/*template.json
